name: dev

on:
  workflow_dispatch:
  pull_request:
    branches: [master]
  push:
    branches: [master, 'branch-*']
    paths-ignore:
      - "scripts/**"
      - "tools/**"
      - "jenkins/**"
      - "notes/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: coursier/setup-action@v1.2.0
        with:
          jvm: temurin:1.21
          apps: sbt
      - uses: coursier/cache-action@v6

      - name: Install Redis
        run: sudo apt-get install redis-server

      - name: Install Kotlin
        run: |
          curl -s https://get.sdkman.io | bash
          source "/home/runner/.sdkman/bin/sdkman-init.sh"
          sdk install kotlin 2.1.0
          sudo ln -s $(which kotlinc) /usr/local/bin/kotlinc

      - name: Build
        run: |
          sbt -Dsbt.log.noformat=true clean
          sbt -Dsbt.log.noformat=true scalafmtCheck
          sbt -Dsbt.log.noformat=true -DenableFatalWarnings=true makeSite
          sbt -Dsbt.log.noformat=true publishLocal

      - name: Unit Tests
        run: sbt -Dsbt.log.noformat=true -Dpekko.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true -DdisableIntegrationTests Test/test

      - name: Integration Tests
        run: sbt -Dsbt.log.noformat=true -Dpekko.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true esw-integration-test/Test/test

      - name: Coverage Report
        run: |
          sbt -DenableCoverage=true coverageReport
          sbt coverageAggregate

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Report
          path: target/scala-3.6.4/scoverage-report

      - name: Multi-Jvm Tests
        run: sbt -Dsbt.log.noformat=true -DgenerateStoryReport=true esw-integration-test/MultiJvm/test

      - name: Generate RTM
        if: always()
        continue-on-error: true
        run: |
          cs launch --channel https://raw.githubusercontent.com/tmtsoftware/osw-apps/branch-6.0.x/apps.json rtm:d45709a -- target/RTM/testStoryMapping.txt tools/RTM/storyRequirementMapping.csv target/RTM/testRequirementsMapping.txt

      - name: Upload RTM
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: RTM
          path: target/RTM

      - name: Notify slack
        if: always()
        continue-on-error: true
        uses: kpritam/slack-job-status-action@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev
