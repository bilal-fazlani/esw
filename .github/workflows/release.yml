name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CSW_VERSION: "4.0.1-RC1"
      ESW_OCS_ENG_UI_VERSION: "0.2.0-RC1"
    steps:
      - uses: actions/checkout@v2
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: 11
          apps: sbt sbtn
      - uses: coursier/cache-action@v5

      - uses: actions/setup-node@v1
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install Redis
        run: sudo apt-get install redis-server

      - name: Install Kotlin
        run: |
          curl -s https://get.sdkman.io | bash
          source "/home/runner/.sdkman/bin/sdkman-init.sh"
          sdk install kotlin
          sudo ln -s $(which kotlinc) /usr/local/bin/kotlinc

      - run: npm install -g junit-merge
      - run: npm install -g junit-viewer

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          #strip `v` prefix
          strip_v: true

      # This env variable is used when we do Docs Publish
      - name: Set JITPACK_VERSION environment variable
        run: echo "JITPACK_VERSION=${{steps.tag.outputs.tag}}" >> $GITHUB_ENV

      - name: Build
        run: |
          sbtn clean
          sbtn scalafmtCheck
          sbt -DenableFatalWarnings=true makeSite

      - name: Unit Tests
          run: sbt -Dakka.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true -DdisableIntegrationTests test:test

      - name: Integration Tests
        run: sbt -Dakka.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true esw-integration-test/test:test

      - name: Coverage Report
        run: |
          sbt -DenableCoverage=true coverageReport
          sbtn coverageAggregate

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: Coverage Report
          path: target/scala-2.13/scoverage-report

      - name: Delete js targets
        continue-on-error: true
        run: find . -type d -regex ".*js/target.*" | xargs rm -rf

      - name: Multi-Jvm Tests
        run: sbt -DgenerateStoryReport=true esw-integration-test/multi-jvm:test

      - name: Generate RTM
        if: always()
        continue-on-error: true
        run: |
          cs launch --channel https://raw.githubusercontent.com/tmtsoftware/osw-apps/master/apps.json rtm:0.3.0 -- target/RTM/testStoryMapping.txt tools/RTM/storyRequirementMapping.csv target/RTM/testRequirementsMapping.txt

      - name: Upload RTM
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: RTM
          path: target/RTM

      - name: Github Release
        run: sbt githubRelease
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Docs Publish
        run: |
          echo 'echo $RELEASE_TOKEN' > /tmp/.git-askpass
          chmod +x /tmp/.git-askpass
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Action"
          sbt clean ghpagesPushSite
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GIT_ASKPASS: /tmp/.git-askpass

      - name: Notify slack
        if: always()
        continue-on-error: true
        uses: kpritam/slack-job-status-action@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-release
