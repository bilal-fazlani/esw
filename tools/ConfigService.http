# get access token for esw-user
POST http://localhost:8081/auth/realms/TMT/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

client_id=tmt-frontend-app&grant_type=password&username=esw-user&password=esw-user


> {% client.global.set("access_token", response.body.access_token); %}


############### config Service #############
#save smObsModeConfig file
POST http://your-ip:5000/config/smObsModeConfig.conf
Content-Type: application/octet-stream
Authorization: Bearer {{access_token}}

{
  "esw-sm": {
    "obsModes": {
      "IRIS_Darknight": {
        "resources": ["IRIS", "TCS", "NFIRAOS"],
        "sequencers": ["IRIS", "ESW", "TCS"]
      },
      "IRIS_Cal": {
        "resources": ["IRIS", "NSCU", "NFIRAOS"],
        "sequencers": ["IRIS", "ESW", "AOESW"]
      },
      "WFOS_Cal": {
        "resources": ["WFOS"],
        "sequencers": ["WFOS", "ESW"]
      }
    }
  }
}

#### To Add version config. this API call will also mark it as active version
POST http://<your-ip>:4000/config/tmt/osw/version.conf
Content-Type: application/octet-stream

{
  scripts.version="0.1.0-SNAPSHOT"
}

##### To check active config
GET http://<your-ip>:4000/active-config/tmt/osw/version.conf

#### To update version config
PUT http://<your-ip>:4000/config/tmt/osw/version.conf
Content-Type: application/octet-stream
Authorization: Bearer {{access_token}}

{
  scripts.version="0.1.0-SNAPSHOT"
}

##### To make it active version of the config. id is returned from first/second call
PUT http://<your-ip>:4000/active-version/tmt/osw/version.conf?id=[id]&comment=abcd
Authorization: Bearer {{access_token}}


##### To check if config is updated and marked as active
GET http://<your-ip>:4000/active-config/tmt/osw/version.conf
